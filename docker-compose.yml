# Docker Compose file for development

services:
  # PostgreSQL database service
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Resheh-2019}
      POSTGRES_DB: ${POSTGRES_DB:-powerplantapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${PGPORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-powerplantapp}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js application service
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-5000}
      - PGHOST=${PGHOST:-postgres}
      - PGPORT=${PGPORT:-5432}
      - PGUSER=${PGUSER:-root}
      - PGPASSWORD=${PGPASSWORD:-Resheh-2019}
      - PGDATABASE=${PGDATABASE:-powerplantapp}
      - DATABASE_URL=${DATABASE_URL:-postgres://root:Resheh-2019@postgres:5432/powerplantapp}
      - SESSION_SECRET=${SESSION_SECRET:-local_development_secret_change_this_in_production}
      # Vite configuration for Docker development
      - VITE_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_WATCH_POLL=true
    volumes:
      - ./:/app
      - /app/node_modules
      - ./client:/app/client
      - ./server:/app/server
      - ./shared:/app/shared
      - app_uploads:/app/uploads
      - app_backups:/app/backups
    # Note: The command is defined in Dockerfile.dev

volumes:
  postgres_data:
  app_uploads:
  app_backups:
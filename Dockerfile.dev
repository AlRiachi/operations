FROM node:20-alpine

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

# Install PostgreSQL client for database scripts
RUN apk add --no-cache postgresql-client bash

# Copy necessary scripts and configuration
COPY scripts/ ./scripts/
COPY wait-for-postgres.sh ./
COPY drizzle.config.ts ./
COPY .env.example ./.env

# Ensure scripts are executable
RUN chmod +x ./wait-for-postgres.sh ./scripts/*.sh

# Create directories for uploads and backups
RUN mkdir -p ./uploads ./backups

# Expose application port
EXPOSE 5000

# Copy the rest of the application code
# This needs to happen before running the app
COPY . .

# Create an entrypoint script to handle startup
RUN echo '#!/bin/sh' > /app/entrypoint.sh && \
    echo 'set -e' >> /app/entrypoint.sh && \
    echo 'echo "Initializing database..."' >> /app/entrypoint.sh && \
    echo './scripts/init-docker-db.sh' >> /app/entrypoint.sh && \
    echo 'echo "Starting application in development mode..."' >> /app/entrypoint.sh && \
    echo 'exec npm run dev' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

# Use entrypoint script to handle startup
ENTRYPOINT ["/app/entrypoint.sh"]